services:
  rag-app:
    build:
      context: ../..
      dockerfile: docker/prod/Dockerfile
    container_name: python-rag-app-mvp-prod
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
    env_file:
      - ../../.env
    volumes:
      - ../../data:/app/data:ro
      - ../../store:/app/store
      - ../../storage/logs:/app/storage/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rag-network-prod
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Optional: Add Redis for production session storage
  redis:
    image: redis:7-alpine
    container_name: rag-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped
    networks:
      - rag-network-prod
    profiles:
      - with-redis
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

networks:
  rag-network-prod:
    driver: bridge

volumes:
  redis_data_prod: